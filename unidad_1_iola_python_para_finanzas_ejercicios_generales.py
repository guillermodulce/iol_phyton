# -*- coding: utf-8 -*-
"""Unidad 1: IOLA Python para finanzas - Ejercicios generales.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1afhq_4mSAhkdPs7wqSYf7Dl4dUhPzN7M

### Ejercicio 1

Buscando en el cuaderno de la clase describir que es y para que programar.
"""







"""### Ejercicio 2
Explicar con sus palabras que es un algoritmo
"""







"""### Ejercicio 3
Escribir con palabras un algoritmo que defina los pasos para retirar dinero de un cajero automatico.

"""







"""### Ejercicio 4
El algoritmo previamente definido, llevarlo a un diagrama de flujo con la herrmaienta
https://lucid.app/documents#/dashboard  
"""







"""### Ejercicio 5 
Defina con sus palabras que es una variable y que tipos de datos básicos conocemos hasta el momento.

"""







"""### Ejercicio 6
Crear una variable precio_accion y asignarle un valor numerico
"""





### posible solución
precio_accion = 142.23
precio_accion

"""### Ejercicio 7
Crear una variable ticker, que contendrá el nombre de un activo de su preferencia.
"""

i = 0
i = i + 1
i = i + 1
i = i + 1



### posible solucion
ticker = "ggal.ba"
ticker

"""### Ejercicio 8
Crear un contador que incremente de a una unidad ejecutarlo 3 veces y evaluar el correcto resultado.
"""





### posible solución
contador = 0
contador +=1 
contador +=1 
contador +=1 

contador

"""### Ejercicio 9
Definir dos variables booleanas sus nombres deben expresar si un cliente puede comprar y si el mercado esta abierto, inicializarlas con los valores de verdad de su preferencia
"""





### posible solución
puede_comprar = True
mercado_abierto = False

"""### Ejercicio 10 
 Determinar el operador lógico que devuelva Verdadero si se cumple una de las expresiones, cumplir significa que su valor de verdad es True, utilizar como expresiones las variables previamente definidas.
"""





### posible solución
puede_comprar or mercado_abierto

"""### Ejercicio 11
 Determinar el operador lógico que devuelva Verdad si se cumplen simultaneamente las dos expresiones, utilizar las variables previamente definidas.
"""





### posible solución
puede_comprar and mercado_abierto

"""### Ejercicio 12 
Determinar el operador lógico que devuelve el valor opuesto a la expresión.
"""





### posible solución
not mercado_abierto

"""### Ejercicio 13 
Determinar una expresion logica que indique que algo es verdadero, si no ocurre que el cliente puede comprar (variable previamente definida)

"""





### posible solución
puede_comprar = False
not puede_comprar

"""### Ejercicio 14 
Determinar una expresion logica que indique que algo es verdadero, si no ocurre que el cliente puede comprar (variable previamente definida) y ademas no es horario de mercado
"""





### posible solución
puede_comprar = False
mercado_abierto = False 
not puede_comprar and not mercado_abierto

"""### Ejercicio 15 
Escribir un programa que contenga tres variables
- una con un valor entero.
- una con un valor con numeros decimales.
- una con una cadena de caracteres.
"""





### posible solución
entero = 1
flotante = 1.23
cadena = "hola!"

"""### Ejercicio 16
Ulitizando las 3 variables anteriormente definidas se pide por medio de print y type, mostrar por pantalla el tipo de dato que contiene cada variable.
"""





### posible solución
print(type(entero))
print(type(flotante))
print(type(cadena))

